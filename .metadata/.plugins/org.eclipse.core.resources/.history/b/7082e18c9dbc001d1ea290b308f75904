/*
 * API_uart.c
 *
 *  Created on: 7 mar. 2023
 *      Author: ipave
 */

#include "API_uart.h"
#include <stdio.h>
#include "stm32f4xx_hal.h"  		/* <- HAL include */
#include "stm32f4xx_nucleo_144.h" 	/* <- BSP include */
#include <stdbool.h>

UART_HandleTypeDef huart1;


bool_t uartInit(){
	 /* USER CODE END USART1_Init 1 */
	 huart1.Instance = USART1;
	 huart1.Init.BaudRate = 115200;
	 huart1.Init.WordLength = UART_WORDLENGTH_8B;
	 huart1.Init.StopBits = UART_STOPBITS_1;
	 huart1.Init.Parity = UART_PARITY_NONE;
	 huart1.Init.Mode = UART_MODE_TX_RX;
	 huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	 huart1.Init.OverSampling = UART_OVERSAMPLING_16;
	 huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
	 huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
	if (HAL_UART_Init(&huart1) != HAL_OK)return 1;
	if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)return 1;
	if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)return 1;
	if (HAL_UARTEx_EnableFifoMode(&huart1) != HAL_OK)return 1;
	return 0;

}
void uartSendString(uint8_t * pstring){

	uartSendStringSize(pstring,sizeof (pstring));

}
void uartSendStringSize(uint8_t * pstring, uint16_t size){

	HAL_UART_Transmit(&huart1,pstring,size,10);


}
void uartReceiveStringSize(uint8_t * pstring, uint16_t size){
	return (HAL_UART_Receive(&huart1,pstring,size));
}
