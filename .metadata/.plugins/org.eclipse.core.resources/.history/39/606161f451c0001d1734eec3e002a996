/*
 * API_uart.c
 *
 *  Created on: 7 mar. 2023
 *      Author: ipave
 */

#include "API_uart.h"
#include <stdio.h>
#include "stm32f4xx_hal.h"  		/* <- HAL include */
#include "stm32f4xx_nucleo_144.h" 	/* <- BSP include */
#include <stdbool.h>

#define TIMEOUT 10
UART_HandleTypeDef huart1;


bool uartInit(){
    GPIO_InitTypeDef GPIO_InitStruct;

	GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStruct.Pull = GPIO_PULLUP;
	GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

	 __USART1_CLK_DISABLE();
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);

	 huart1.Instance = USART3;
	  huart1.Init.BaudRate = 38400;
	  huart1.Init.WordLength = UART_WORDLENGTH_8B;
	  huart1.Init.StopBits = UART_STOPBITS_1;
	  huart1.Init.Parity = UART_PARITY_NONE;
	  huart1.Init.Mode = UART_MODE_TX_RX;
	  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	  huart1.Init.OverSampling = UART_OVERSAMPLING_16;

	  HAL_UART_Init(&huart1);
	// if (HAL_UART_Init(&huart1) != HAL_OK)return 1;
	 uartSendString((uint8_t * )"UART INICIALIZADA EN 9600 8N1");
	 return 0;

}
void uartSendString(uint8_t * pstring){

	uartSendStringSize(pstring,sizeof (pstring));

}
void uartSendStringSize(uint8_t * pstring, uint16_t size){

	HAL_UART_Transmit(&huart1,pstring,size,TIMEOUT);


}
void uartReceiveStringSize(uint8_t * pstring, uint16_t size){
	HAL_UART_Receive(&huart1,pstring,size,TIMEOUT);
}
